pdf("../plot/plot5a.pdf",h=1000,w=1000)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
for (j in c(1,4,14,15,17,18,8,16,7)){
#for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.6, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
#png(filename,h=1500,w=1500)
pdf("../plot/plot5a.pdf",h=100,w=100)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
for (j in c(1,4,14,15,17,18,8,16,7)){
#for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.6, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
#png(filename,h=1500,w=1500)
pdf("../plot/plot5a.pdf",h=19,w=19)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
for (j in c(1,4,14,15,17,18,8,16,7)){
#for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.6, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
#png(filename,h=1500,w=1500)
pdf("../plot/plot5a.pdf",h=19,w=22)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
for (j in c(1,4,14,15,17,18,8,16,7)){
#for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.6, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
#png(filename,h=1500,w=1500)
pdf("../plot/plot5a.pdf",h=22,w=22)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
for (j in c(1,4,14,15,17,18,8,16,7)){
#for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.6, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
#filename=paste0("../plot/plot_taylor_Early_Summer.png")
#png(filename,h=1500,w=1500)
pdf("../plot/plot5b.pdf",h=22,w=22)
par(mfrow=c(3,3),omi = c(1, 1, 1, 4),xpd = NA)
#for (j in c(1,4,14,15,17,18,8,16,7)){
for (j in c(6,2,3,5,9,11,12,13,10)){
if(j == 1) mytitlecolor <- "red3" #Early Stuart
if(j %in% c(11,9,12,13,10)) mytitlecolor <- "purple" #Late
if(j %in% c(4,14,16,17,18,15,8)) mytitlecolor <- "forestgreen" #green #Early Summer
if(j %in% c(7,2,6,3,5)) mytitlecolor <- "blue" #Summer
print(paste("Pop=",j))
pop <- retro %>% filter(popID==j&age==99)
#n_model <- unique(pop$model)
tot_n_model <- pop %>% distinct(model)
idx_larkin<-grep("Larkin",n_model)
idx_power<-grep("Power",n_model)
idx_power_old<-idx_power[n_model[idx_power]%in%oldpower]
idx_power_new<-idx_power[!n_model[idx_power]%in%oldpower]
idx_ricker<-grep("Ricker",n_model)
idx_ricker_old<-idx_ricker[n_model[idx_ricker]%in%oldricker]
idx_ricker_new<-idx_ricker[!n_model[idx_ricker]%in%oldricker]
idx_sib<-grep("sibling5",n_model)
idx_jack<-grep("Jacksib",n_model)
idx_naive<-which(n_model%in%n_model[-c(idx_power,idx_ricker,idx_larkin,idx_sib)])
mypch<-mycolor<-rep(NA,length(n_model))
mycolor[idx_larkin]<-"gold"
mypch[idx_larkin]<-(1:length(idx_larkin))+2
mycolor[idx_power_old]<-"springgreen3"
mypch[idx_power_old]<-myseries[1:length(idx_power_old)]
mycolor[idx_power_new]<-"blue"
mypch[idx_power_new]<-myseries[3:(length(idx_power_new)+2)]
mycolor[idx_ricker_old]<-"pink"
mypch[idx_ricker_old]<-myseries[1:length(idx_ricker_old)]
mycolor[idx_ricker_new]<-"red"
mypch[idx_ricker_new]<-myseries[3:(length(idx_ricker_new)+2)]
mycolor[idx_naive]<-"mediumpurple1"
mypch[idx_naive]<-0:(length(idx_naive)-1)
mycolor[idx_sib]<-"grey"
mypch[idx_sib]<-15
mycolor[idx_jack]<-"grey"
mypch[idx_jack]<-16
for (k in 1:length(tot_n_model$model)){
want <- pop %>% filter(model==tot_n_model$model[k]&age==99) %>%
mutate(diff=p50-obs,p50,obs=obs/1e6) %>% filter(!is.na(diff)) %>%
select(retyr,p50,obs) %>%
left_join(fc %>% filter(popID==j) %>% select(retyr,Stock,fc),by="retyr") %>% mutate(fc=fc/1e6)
if(k==1) taylor.diagram(want$obs,want$obs,normalize=T,pch=16,pcex = 4,col="black",cex=2,cex.main=3,ref.sd = T,xlab = "",ylab = "", main = "")
#if(k==1) taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
idx<-which(tot_n_model$model[k]==n_model)
#if(j==5|j==16)taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2,xpd=NA)
#else
taylor.diagram(want$obs,want$p50,add = T,pch=mypch[idx],col=mycolor[idx],normalize=T,pcex = 3,lwd = 2)#,xpd=NA)
}
taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 3,add=T,col="black")
mtext("Taylor Diagram",side=3,line=0.5,cex=3.5,outer = T)
mtext("Standard deviation",side=1,line=2,cex=2,outer = T)
mtext("Standard deviation",side=2,line=2,cex=2,outer = T)
if(j == 18|j == 11) legend("right",c("Observation","Forecast",n_model),
pch=c(16,15,mypch),
col=c("black","black",mycolor),
cex = 3,inset = c(-0.9,1),xpd = NA,
bg=NA,bty = "n",ncol=1,pt.lwd = 2) #else
#taylor.diagram(want$obs,want$fc,normalize=T,pch=15,pcex = 4,add=T,col="black")
rect(-0.1, 1.67, 2, 1.9, col = "white", border = "white")
title(main=pname[j],col.main = mytitlecolor,cex.main = 4)
}
legend("bottomright", c("Early Stuart","Early Summer","Summer","Late"),
text.col = c("red3","forestgreen","blue","purple"),
inset = c(-0.8,-0.25),bty = "n",xpd = NA, cex = 4)
dev.off()
## This program is used to make plot to compare obs with fc models
## questions about this code contract Yi Xu, yi.xu2@dfo-mpo.gc.ca
rm(list=ls())
#setwd("C:/DFO-MPO/Work/Sockeye_paper/code") #set up your own directory that include all the updated env files
library(tidyverse)
library(ggplot2)
library(patchwork)
#library(grid)
data <- read_csv("../data/selected_models_comparison_2022.csv")
data$model[10:12]<-c(" RickerEi.SST*"," RickerEi.SST"," RickerEi.SST")
p<-ggplot(data, aes(x= model, y = p50/1e6,width=0.5)) +
geom_linerange(aes(ymin = p10/1e6, ymax = p90/1e6)) +
geom_hline(aes(yintercept = obs/1e6),col = "red")+
geom_crossbar(aes(ymin = p25/1e6,ymax = p75/1e6,fill= "white"),size = 0.7) +
annotate(geom = "text",x = 4.65,y = 1.6,label="Observation",col = "red",hjust = 0,size = 6)+
coord_cartesian(xlim = c(1,4),clip = 'off')+
facet_wrap(~pop, ncol = 1, scales = "free") +
ylab("Numbers of sockeye (million)")+
theme_bw()+
theme(text = element_text(size = 20),legend.position = "none",
plot.margin = unit(c(1,10,1,1), "lines"))
p
set.seed(100)
data_random <- data.frame(name = "text",y = sample(500))
legend_plot <- ggplot()+
geom_boxplot(data = data_random, aes(x = name, y = y),
fill="salmon",fatten = 2,lwd = 1, width = 1,col = "black") +
geom_text(aes(x = rep(2,5),y = c(1,125.75,250.5,375.25,500),
label = c("p10","p25","p50","p75","p90")),size = 7)+
xlab("")+ylab("")+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
aspect.ratio = 5/3) +
coord_cartesian(xlim = c(1,2),clip = 'off')
legend_plot
string_want <-c("Forecast","Best Rank","Best SD","Best R\nBest RMSE",
"Forecast","Best R","Best RMSE\nBest Rank" ,"Best SD",
"Forecast","Best Rank\n2nd R\n2nd SD\n2nd RMSE", "Best R\nBest SD\nBest RMSE","3rd SD")
dat_text <- data.frame(
label = string_want,#data$justification[c(3,1,2,9,8,7,4,6,5)],
pop   = rep(c("Chilko","Quesnel","Late Shuswap"),each = 4),
x     = c(rep(1:4,3)),
y     = c(rep(c(6,12,16),each = 4)))
p_text <- geom_text(data = dat_text,mapping = aes(x = x, y= y, label = label), vjust = 1,size = 6)
p + p_text +inset_element(legend_plot, left = 0.85, bottom = 0.1, right = 1, top = 0.4, align_to = 'full')
#ggsave("../plot/plot_obs_fc.png",w = 12, h = 11)
ggsave("../plot/plot_obs_fc.pdf",w = 12, h = 11)
## This program is used to make plot to compare obs with fc models
## questions about this code contract Yi Xu, yi.xu2@dfo-mpo.gc.ca
rm(list=ls())
#setwd("C:/DFO-MPO/Work/Sockeye_paper/code") #set up your own directory that include all the updated env files
library(tidyverse)
library(ggplot2)
library(patchwork)
#library(grid)
data <- read_csv("../data/selected_models_comparison_2022.csv")
data$model[10:12]<-c(" RickerEi.SST*"," RickerEi.SST"," RickerEi.SST")
p<-ggplot(data, aes(x= model, y = p50/1e6,width=0.5)) +
geom_linerange(aes(ymin = p10/1e6, ymax = p90/1e6)) +
geom_hline(aes(yintercept = obs/1e6),col = "red")+
geom_crossbar(aes(ymin = p25/1e6,ymax = p75/1e6,fill= "white"),size = 0.7) +
annotate(geom = "text",x = 4.65,y = 1.6,label="Observation",col = "red",hjust = 0,size = 6)+
coord_cartesian(xlim = c(1,4),clip = 'off')+
facet_wrap(~pop, ncol = 1, scales = "free") +
ylab("Numbers of sockeye (million)")+
theme_bw()+
theme(text = element_text(size = 20),legend.position = "none",
plot.margin = unit(c(1,10,1,1), "lines"))
p
set.seed(100)
data_random <- data.frame(name = "text",y = sample(500))
legend_plot <- ggplot()+
geom_boxplot(data = data_random, aes(x = name, y = y),
fill="salmon",fatten = 2,lwd = 1, width = 1,col = "black") +
geom_text(aes(x = rep(2,5),y = c(1,125.75,250.5,375.25,500),
label = c("p10","p25","p50","p75","p90")),size = 7)+
xlab("")+ylab("")+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
aspect.ratio = 5/3) +
coord_cartesian(xlim = c(1,2),clip = 'off')
legend_plot
string_want <-c("Forecast","Best Rank","Best SD","Best R\nBest RMSE",
"Forecast","Best R","Best RMSE\nBest Rank" ,"Best SD",
"Forecast","Best Rank\n2nd R\n2nd SD\n2nd RMSE", "Best R\nBest SD\nBest RMSE","3rd SD")
dat_text <- data.frame(
label = string_want,#data$justification[c(3,1,2,9,8,7,4,6,5)],
pop   = rep(c("Chilko","Quesnel","Late Shuswap"),each = 4),
x     = c(rep(1:4,3)),
y     = c(rep(c(6,12,16),each = 4)))
p_text <- geom_text(data = dat_text,mapping = aes(x = x, y= y, label = label), vjust = 1,size = 6)
p + p_text +inset_element(legend_plot, left = 0.85, bottom = 0.1, right = 1, top = 0.4, align_to = 'full')
#ggsave("../plot/plot_obs_fc.png",w = 12, h = 11)
ggsave("../plot/plot6.pdf",w = 12, h = 11)
